import telebot
import sqlite3
import random
from telebot import types
from dotenv import dotenv_values

config = dotenv_values('.env')

TOKEN = config['TOKEN']

bot = telebot.TeleBot(TOKEN)
db = sqlite3.connect('db', check_same_thread=False)
cursor = db.cursor()

best_users_callbacks = ['balance', 'activity']
slots_callbacks = ['run_slots']
colors = ['black', 'red', 'black', 'red', 'black', 'red', 'green']
dice_callbacks = ['run_dice']
coin_callbacks = ['coin_0', 'coin_1']

top_numbers = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü']
slots_items = ['üçé', 'üçâ', 'üçí', 'üçì', 'üçã', 'üîî', '7Ô∏è‚É£']


def create_db():
    cursor.execute(
        '''
        CREATE TABLE IF NOT EXISTS users (
            id              INTEGER PRIMARY KEY
                                    UNIQUE
                                    NOT NULL,
            user_id         INTEGER UNIQUE
                                    NOT NULL,
            user_first_name TEXT    NOT NULL,
            user_last_name  TEXT,
            username        STRING,
            balance         INTEGER,
            bet             INTEGER,
            games_played    INTEGER,
            games_won       INTEGER,
            games_lost      INTEGER
        );
        '''
    )

    db.commit()


def add_user(
        user_id,
        user_first_name,
        user_last_name,
        username,
        balance,
        bet,
        games_played,
        games_won,
        games_lost
):
    cursor.execute(
        '''
        INSERT INTO users (
            user_id,
            user_first_name,
            user_last_name,
            username,
            balance,
            bet,
            games_played,
            games_won,
            games_lost
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
        ''', (
            user_id,
            user_first_name,
            user_last_name,
            username,
            balance,
            bet,
            games_played,
            games_won,
            games_lost
        )
    )

    db.commit()


@bot.message_handler(commands=['start'])
def start_message(message):
    user_id = message.from_user.id
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    username = message.from_user.username
    default_balance = 1000
    default_bet = 0
    games_num = 0
    win_num = 0
    lose_num = 0

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    markup.row_width = 2

    buttons = [
        types.KeyboardButton('üë§ –ê–∫–∫–∞—É–Ω—Ç'),
        types.KeyboardButton('üé∞ –°–ª–æ—Ç—ã'),
        types.KeyboardButton('üéÅ –ë–æ–Ω—É—Å'),
        types.KeyboardButton('üéØ –†—É–ª–µ—Ç–∫–∞'),
        types.KeyboardButton('üëë –õ—É—á—à–∏–µ –∏–≥—Ä–æ–∫–∏'),
        types.KeyboardButton('üé≤ –ö–æ—Å—Ç–∏'),
        types.KeyboardButton('‚öô –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'),
        types.KeyboardButton('üü° –ú–æ–Ω–µ—Ç–∫–∞')
    ]

    markup.add(*buttons)

    user = cursor.execute('SELECT * FROM users WHERE user_id=?', (user_id,))

    if user.fetchone() is None:
        add_user(
            user_id=user_id,
            user_first_name=first_name,
            user_last_name=last_name,
            username=username,
            balance=default_balance,
            bet=default_bet,
            games_played=games_num,
            games_won=win_num,
            games_lost=lose_num
        )

        bot.send_photo(
            message.chat.id,
            photo=open('bg.jpg', 'rb'),
            caption=f'ü§öüèª –ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>!\n'
                    f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ <b>LuxuryCasino</b>. \n\n'
                    f'üé≤ –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∏–≥—Ä—ã –∏ '
                    f'–ø—Ä–∏—É–º–Ω–æ–∂–∏—Ç—å —Å–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª, –∏–≥—Ä–∞—è –Ω–∞ <b>–≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é</b> –≤–∞–ª—é—Ç—É! \n\n'
                    f'üéÅ –î–ª—è <b>–Ω–æ–≤—ã—Ö</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π '
                    f'–∏–º–µ–µ—Ç—Å—è –ø–æ–¥–∞—Ä–æ–∫ - <b>1000</b> —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –∏–≥—Ä–æ–≤—ã—Ö –º–æ–Ω–µ—Ç. –£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã! \n\n'
                    f'üìç –í–∞—à ID: <code>{user_id}</code> \n'
                    f'üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: <code>{default_balance}</code> –º–æ–Ω–µ—Ç \n',
            parse_mode='HTML',
            reply_markup=markup
        )

    else:
        balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

        bot.send_photo(
            message.chat.id,
            photo=open('bg.jpg', 'rb'),
            caption=f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{message.from_user.first_name} ü§öüèª</b>\n\n'
                    f'–†–∞–¥—ã —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –Ω–∞ <b>LuxuryCasino</b>.\n'
                    f'–ú—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å, \n–º–æ–∂–µ—à—å –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∏–≥—Ä–µ!\n\n'
                    f'üìç –¢–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id: <code>{user_id}</code> \n'
                    f'üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç \n', parse_mode='HTML',
            reply_markup=markup
        )


@bot.message_handler(content_types=['text'])
def menu(message):
    user_id = message.from_user.id
    user_id = cursor.execute('SELECT user_id FROM users WHERE user_id=?', (user_id,)).fetchone()[0]
    balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]
    games_num = cursor.execute('SELECT games_played FROM users WHERE user_id=?', (user_id,)).fetchone()[0]
    games_win = cursor.execute('SELECT games_won FROM users WHERE user_id=?', (user_id,)).fetchone()[0]
    games_lose = cursor.execute('SELECT games_lost FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

    if message.text == 'üë§ –ê–∫–∫–∞—É–Ω—Ç':
        bot.send_photo(
            message.chat.id,
            photo=open('bg.jpg', 'rb'),
            caption=f'üë§ <b>–ê–∫–∫–∞—É–Ω—Ç</b> - {message.from_user.first_name}\n\n'
                    f'üìç –¢–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id: <code>{user_id}</code> \n'
                    f'üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç \n\n'
                    f'üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n'
                    f'üé≤ –í—Å–µ–≥–æ –∏–≥—Ä: {games_num}\n'
                    f'üèÜ –ü–æ–±–µ–¥: {games_win}\n'
                    f'‚ò† –ü–æ—Ä–∞–∂–µ–Ω–∏–π: {games_lose}',
            parse_mode='HTML'
        )

    elif message.text == '‚öô –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫':
        markup = types.InlineKeyboardMarkup()

        buttons = [
            types.InlineKeyboardButton(text='GitHub', url='https://github.com/VitalijKo'),
            types.InlineKeyboardButton(text='Telegram', url='https://t.me/VitalijKo')
        ]

        markup.add(*buttons)

        bot.send_message(
            message.chat.id,
            text='‚öô <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫</b> \n\n'
                 '–Ø –Ω–∞ GitHub –∏ –≤ Telegram!',
            parse_mode='HTML',
            reply_markup=markup
        )

    elif message.text == 'üéÅ –ë–æ–Ω—É—Å':
        if balance < 1000:
            cursor.execute(f'UPDATE users SET balance = (balance + 1000) WHERE user_id = "{user_id}"')

            db.commit()

            bot.send_message(
                message.chat.id,
                text=f'üéÅ –í–∞–º –±—ã–ª–∏ –∑–∞—á–∏—Å–ª–µ–Ω—ã <b>1000</b> –º–æ–Ω–µ—Ç!',
                parse_mode='HTML'
            )

        else:
            bot.send_message(
                message.chat.id,
                text='üö´ <b>–û—à–∏–±–∫–∞</b>\n\n'
                     f'üéÅ –ë–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ 1000 –º–æ–Ω–µ—Ç '
                     f'–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∞—à –±–∞–ª–∞–Ω—Å '
                     f'—Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>–º–µ–Ω–µ–µ</b> 1000 –º–æ–Ω–µ—Ç.\n\n'
                     f'üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç',
                parse_mode='HTML'
            )

    elif message.text == 'üëë –õ—É—á—à–∏–µ –∏–≥—Ä–æ–∫–∏':
        markup = types.InlineKeyboardMarkup()

        buttons = [
            types.InlineKeyboardButton(text='–ü–æ –±–∞–ª–∞–Ω—Å—É', callback_data='balance'),
            types.InlineKeyboardButton(text='–ü–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', callback_data='activity')
        ]

        markup.add(*buttons)

        bot.send_message(
            message.chat.id,
            'üëë <b>–õ—É—á—à–∏–µ –∏–≥—Ä–æ–∫–∏</b>\n\n',
            parse_mode='HTML',
            reply_markup=markup
        )

    elif message.text == 'üé∞ –°–ª–æ—Ç—ã':
        default_bet = 0

        cursor.execute(f'UPDATE users SET bet = "{default_bet}" WHERE user_id = "{user_id}"')

        db.commit()

        msg = bot.send_message(
            message.chat.id,
            text=f'üé∞ <b>–°–ª–æ—Ç—ã</b> \n\n'
                 f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏.\n'
                 f'–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∏–≥—Ä—ã: <code>{balance}</code> –º–æ–Ω–µ—Ç',
            parse_mode='HTML'
        )

        bot.register_next_step_handler(msg, set_bet, 'slots')

    elif message.text == 'üéØ –†—É–ª–µ—Ç–∫–∞':
        default_bet = 0

        cursor.execute(f'UPDATE users SET bet = "{default_bet}" WHERE user_id = "{user_id}"')

        db.commit()

        msg = bot.send_message(
            message.chat.id,
            text=f'üéØ <b>–†—É–ª–µ—Ç–∫–∞</b> \n\n'
                 f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏.\n'
                 f'–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∏–≥—Ä—ã: <code>{balance}</code> –º–æ–Ω–µ—Ç',
            parse_mode='HTML'
        )

        bot.register_next_step_handler(msg, set_bet, 'roulette')

    elif message.text == 'üé≤ –ö–æ—Å—Ç–∏':
        default_bet = 0

        cursor.execute(f'UPDATE users SET bet = "{default_bet}" WHERE user_id = "{user_id}"')

        db.commit()

        msg = bot.send_message(
            message.chat.id,
            text=f'üé≤ <b>–ö–æ—Å—Ç–∏</b> \n\n'
                 f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏.\n'
                 f'–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∏–≥—Ä—ã: <code>{balance}</code> –º–æ–Ω–µ—Ç',
            parse_mode='HTML'
        )

        bot.register_next_step_handler(msg, set_bet, 'dice')

    elif message.text == 'üü° –ú–æ–Ω–µ—Ç–∫–∞':
        default_bet = 0

        cursor.execute(f'UPDATE users SET bet = "{default_bet}" WHERE user_id = "{user_id}"')

        db.commit()

        msg = bot.send_message(
            message.chat.id,
            text=f'üü° <b>–ú–æ–Ω–µ—Ç–∫–∞</b> \n\n'
                 f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏.\n'
                 f'–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∏–≥—Ä—ã: <code>{balance}</code> –º–æ–Ω–µ—Ç',
            parse_mode='HTML'
        )

        bot.register_next_step_handler(msg, set_bet, 'coin')


def set_bet(message, game):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=f'change_bet_{game}')
    markup.add(button)

    try:
        default_bet = 0
        user_id = message.from_user.id

        balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

        bet = message.text

        if int(balance) >= int(bet) > 0:
            cursor.execute(f'UPDATE users SET bet = {bet} WHERE user_id = "{user_id}"')

            db.commit()

            balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

            start_game(message, game)

        else:
            bot.send_message(
                message.chat.id,
                'üö´ <b>–û—à–∏–±–∫–∞</b>\n\n'
                '–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å, –∞ —Ç–∞–∫–∂–µ\n'
                '–±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –Ω—É–ª—é!\n'
                '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ',
                parse_mode='HTML',
                reply_markup=markup
            )

            cursor.execute(f'UPDATE users SET bet = "{default_bet}" WHERE user_id = "{user_id}"')

            db.commit()
    except ValueError:
        default_bet = 0
        user_id = message.from_user.id

        bot.send_message(
            message.chat.id,
            'üö´ <b>–û—à–∏–±–∫–∞</b>\n\n'
            '–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º!\n'
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ',
            parse_mode='HTML', reply_markup=markup
        )

        cursor.execute(f'UPDATE users SET bet = "{default_bet}" WHERE user_id = "{user_id}"')

        db.commit()


def start_game(message, game):
    user_id = message.from_user.id
    user_bet = cursor.execute('SELECT bet FROM users WHERE user_id=?', (user_id,)).fetchone()[0]
    balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

    markup = types.InlineKeyboardMarkup()

    if game == 'slots':
        title = 'üé∞ <b>–°–ª–æ—Ç—ã</b>'

        buttons = [
            types.InlineKeyboardButton(text='üïπ –ö—Ä—É—Ç–∏—Ç—å', callback_data='run_slots'),
            types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É', callback_data='change_bet_slots')
        ]

    elif game == 'roulette':
        title = 'üéØ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç</b>'

        buttons = [
            types.InlineKeyboardButton(text='‚ö´ –ß–µ—Ä–Ω—ã–π', callback_data='black'),
            types.InlineKeyboardButton(text='üî¥ –ö—Ä–∞—Å–Ω—ã–π', callback_data='red'),
            types.InlineKeyboardButton(text='üü¢ –ó–µ–ª–µ–Ω—ã–π', callback_data='green'),
            types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É', callback_data='change_bet_roulette')
        ]

    elif game == 'dice':
        title = 'üé≤ <b>–ö–æ—Å—Ç–∏</b>'

        buttons = [
            types.InlineKeyboardButton(text='ü•è –ë—Ä–æ—Å–∏—Ç—å', callback_data='run_dice'),
            types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É', callback_data='change_bet_dice')
        ]

    elif game == 'coin':
        title = 'üü° <b>–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞?</b>'

        buttons = [
            types.InlineKeyboardButton(text='ü¶Ö –û—Ä–µ–ª', callback_data='coin_0'),
            types.InlineKeyboardButton(text='ü•á –†–µ—à–∫–∞', callback_data='coin_1'),
            types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É', callback_data='change_bet_coin')
        ]

    markup.add(*buttons)

    bot.send_message(
        message.chat.id,
        f'{title}\n\n'
        f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
        f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç. ',
        parse_mode='HTML',
        reply_markup=markup
    )


def get_best_players(call):
    user_id = call.from_user.id

    if call.data == 'balance':
        cursor.execute(
            '''
            SELECT username, balance, games_played
            FROM users
            ORDER BY balance desc
            LIMIT 10;
            '''
        )

        richest_players = cursor.fetchall()

        output = 'üí∞ <b>–°–∞–º—ã–µ –±–æ–≥–∞—Ç—ã–µ –∏–≥—Ä–æ–∫–∏</b>\n\n'

        for i, richest_player in enumerate(richest_players):
            output += f'<b>{top_numbers[i]} üë§ {richest_player[0]}</b>\n' \
                      f'üí∞ –ë–∞–ª–∞–Ω—Å: {richest_player[1]}\n' \
                      f'üé≤ –í—Å–µ–≥–æ –∏–≥—Ä: {richest_player[2]}\n\n'

        bot.send_photo(
            user_id,
            photo=open('bg.jpg', 'rb'),
            caption=output,
            parse_mode='HTML'
        )

    else:
        cursor.execute(
            '''
            SELECT username, balance, games_played
            FROM users
            ORDER BY games_played desc
            LIMIT 10;
            '''
        )

        most_active_players = cursor.fetchall()

        output = 'üé≤ <b>–°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä–æ–∫–∏</b>\n\n'

        for i, most_active_player in enumerate(most_active_players):
            output += f'<b>{top_numbers[i]} üë§ {most_active_player[0]}</b>\n' \
                      f'üí∞ –ë–∞–ª–∞–Ω—Å: {most_active_player[1]}\n' \
                      f'üé≤ –í—Å–µ–≥–æ –∏–≥—Ä: {most_active_player[2]}\n\n'

        bot.send_photo(
            user_id,
            photo=open('bg.jpg', 'rb'),
            caption=output,
            parse_mode='HTML'
        )


def slots(call):
    user_id = call.from_user.id

    balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]
    user_bet = cursor.execute('SELECT bet FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

    result = [
        random.choices(slots_items, k=3),
        random.choices(slots_items, k=3),
        random.choices(slots_items, k=3)
    ]

    markup = types.InlineKeyboardMarkup()

    buttons = [
        types.InlineKeyboardButton(text='üïπ –ö—Ä—É—Ç–∏—Ç—å', callback_data='run_slots'),
        types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É', callback_data='change_bet_slots')
    ]

    markup.add(*buttons)

    if balance < user_bet:
        bot.send_message(
            user_id,
            'üö´ <b>–û—à–∏–±–∫–∞</b>\n\n'
            '–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å, –∞ —Ç–∞–∫ –∂–µ\n'
            '–±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –Ω—É–ª—é!\n'
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ',
            parse_mode='HTML',
            reply_markup=markup
        )

    else:
        output = ''

        for row in result:
            output += '    '.join(row) + '\n'

        cashout = 0

        result = list(zip(*result))

        for i, reel in enumerate(result):
            result[i] = list(reel)

        for item in result[0]:
            if item in result[1] and item in result[2] and item != '0':
                if item in slots_items[:2]:
                    cashout += 0.5

                if item in slots_items[:4]:
                    cashout += 1

                if item in slots_items[:6]:
                    cashout += 2

                if item == slots_items[6]:
                    cashout += 5

                indexes = [
                    result[0].index(item),
                    result[1].index(item),
                    result[2].index(item)
                ]

                for i, index in enumerate(indexes):
                    result[i][index] = '0'

        if cashout == 15:
            cashout = 100

        output += f'\n\n–í—ã –ø–æ–ª—É—á–∏–ª–∏: <code>{user_bet * cashout}</code> –º–æ–Ω–µ—Ç.'

        bot.send_message(
            call.message.chat.id,
            f'<b>{output}</b>',
            parse_mode='HTML'
        )

        if cashout >= 1:
            bot.answer_callback_query(call.id, f'{"–ü–æ–±–µ–¥–∞!" if cashout < 100 else "–î–∂–µ–∫–ø–æ—Ç!"}!')

            cursor.execute(f'UPDATE users SET balance = (balance + bet * {cashout - 1}) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_won = (games_won + 1) WHERE user_id = "{user_id}"')

            db.commit()

            balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

            bot.send_message(
                call.message.chat.id,
                f'üé∞ <b>{"–ü–æ–±–µ–¥–∞!" if cashout < 100 else "–î–∂–µ–∫–ø–æ—Ç!"}</b>\n\n'
                f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
                f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
                f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ?',
                parse_mode='HTML',
                reply_markup=markup
            )

        else:
            bot.answer_callback_query(call.id, '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!')

            cursor.execute(f'UPDATE users SET balance = (balance + bet * {cashout - 1}) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_lost = (games_lost + 1) WHERE user_id = "{user_id}"')

            db.commit()

            balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

            bot.send_message(
                call.message.chat.id,
                f'üé∞ <b>–ü—Ä–æ–∏–≥—Ä—ã—à!</b>\n\n'
                f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
                f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
                f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ?',
                parse_mode='HTML',
                reply_markup=markup
            )


def roulette(call):
    user_id = call.from_user.id

    balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]
    user_bet = cursor.execute('SELECT bet FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

    random_color = str(random.choice(colors))

    markup = types.InlineKeyboardMarkup()

    buttons = [
        types.InlineKeyboardButton(text='‚ö´ –ß–µ—Ä–Ω—ã–π', callback_data='black'),
        types.InlineKeyboardButton(text='üî¥ –ö—Ä–∞—Å–Ω—ã–π', callback_data='red'),
        types.InlineKeyboardButton(text='üü¢ –ó–µ–ª–µ–Ω—ã–π', callback_data='green'),
        types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É', callback_data='change_bet_roulette')
    ]

    markup.add(*buttons)

    if balance < user_bet:
        bot.send_message(
            user_id,
            'üö´ <b>–û—à–∏–±–∫–∞</b>\n\n'
            '–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å, –∞ —Ç–∞–∫ –∂–µ\n'
            '–±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –Ω—É–ª—é!\n'
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ',
            parse_mode='HTML',
            reply_markup=markup
        )

    elif call.data == 'black' and call.data == random_color:
        bot.answer_callback_query(call.id, '–ü–æ–±–µ–¥–∞!')

        cursor.execute(f'UPDATE users SET balance = (balance + bet * 2) WHERE user_id = "{user_id}"')

        db.commit()

        cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

        db.commit()

        cursor.execute(f'UPDATE users SET games_won = (games_won + 1) WHERE user_id = "{user_id}"')

        db.commit()

        balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

        bot.send_message(
            call.message.chat.id,
            f'üéØ <b>–ü–æ–±–µ–¥–∞!</b>\n\n'
            f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
            f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
            f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ? –í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç.',
            parse_mode='HTML',
            reply_markup=markup
        )

    elif call.data == 'red' and call.data == random_color:
        bot.answer_callback_query(call.id, '–ü–æ–±–µ–¥–∞!')

        cursor.execute(f'UPDATE users SET balance = (balance + bet * 2) WHERE user_id = "{user_id}"')

        db.commit()

        cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

        db.commit()

        cursor.execute(f'UPDATE users SET games_won = (games_won + 1) WHERE user_id = "{user_id}"')

        db.commit()

        balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

        bot.send_message(
            call.message.chat.id,
            f'üéØ <b>–ü–æ–±–µ–¥–∞!</b>\n\n'
            f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
            f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
            f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ? –í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç.',
            parse_mode='HTML',
            reply_markup=markup
        )

    elif call.data == 'green' and call.data == random_color:
        bot.answer_callback_query(call.id, '–ü–æ–±–µ–¥–∞!')

        cursor.execute(f'UPDATE users SET balance = (balance + bet * 7) WHERE user_id = "{user_id}"')

        db.commit()

        cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

        db.commit()

        cursor.execute(f'UPDATE users SET games_won = (games_won + 1) WHERE user_id = "{user_id}"')

        db.commit()

        balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

        bot.send_message(
            call.message.chat.id,
            f'üéØ <b>–ü–æ–±–µ–¥–∞!</b>\n\n'
            f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
            f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
            f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ? –í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç.',
            parse_mode='HTML',
            reply_markup=markup
        )

    else:
        bot.answer_callback_query(call.id, '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!')

        cursor.execute(f'UPDATE users SET balance = (balance - bet) WHERE user_id = "{user_id}"')

        db.commit()

        cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

        db.commit()

        cursor.execute(f'UPDATE users SET games_lost = (games_lost + 1) WHERE user_id = "{user_id}"')

        db.commit()

        balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

        bot.send_message(
            call.message.chat.id,
            f'üéØ <b>–ü—Ä–æ–∏–≥—Ä—ã—à!</b>\n\n'
            f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
            f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
            f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ? –í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç.',
            parse_mode='HTML',
            reply_markup=markup
        )


def dice(call):
    user_id = call.from_user.id

    balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]
    user_bet = cursor.execute('SELECT bet FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

    casino_number = random.randint(1, 12)
    user_number = random.randint(1, 12)

    markup = types.InlineKeyboardMarkup()

    buttons = [
        types.InlineKeyboardButton(text='ü•è –ë—Ä–æ—Å–∏—Ç—å', callback_data='run_dice'),
        types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É', callback_data='change_bet_dice')
    ]

    markup.add(*buttons)

    if balance < user_bet:
        bot.send_message(
            user_id,
            'üö´ <b>–û—à–∏–±–∫–∞</b>\n\n'
            '–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å, –∞ —Ç–∞–∫ –∂–µ\n'
            '–±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –Ω—É–ª—é!\n'
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ',
            parse_mode='HTML',
            reply_markup=markup
        )

    else:
        bot.send_message(
            call.message.chat.id,
            f'<b>–ß–∏—Å–ª–æ –∫–∞–∑–∏–Ω–æ:</b> <code>{casino_number}</code>.\n'
            f'<b>–í–∞—à–µ —á–∏—Å–ª–æ:</> <code>{user_number}</code>.\n\n',
            parse_mode='HTML'
        )

        if user_number >= casino_number:
            bot.answer_callback_query(call.id, '–ü–æ–±–µ–¥–∞!')

            cursor.execute(f'UPDATE users SET balance = (balance + bet * 2) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_won = (games_won + 1) WHERE user_id = "{user_id}"')

            db.commit()

            balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

            bot.send_message(
                call.message.chat.id,
                f'üé≤ <b>–ü–æ–±–µ–¥–∞!</b>\n\n'
                f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
                f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
                f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ?',
                parse_mode='HTML',
                reply_markup=markup
            )

        elif user_number < casino_number:
            bot.answer_callback_query(call.id, '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!')

            cursor.execute(f'UPDATE users SET balance = (balance - bet) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_lost = (games_lost + 1) WHERE user_id = "{user_id}"')

            db.commit()

            balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

            bot.send_message(
                call.message.chat.id,
                f'üé≤ <b>–ü—Ä–æ–∏–≥—Ä—ã—à!</b>\n\n'
                f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
                f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
                f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ?',
                parse_mode='HTML',
                reply_markup=markup
            )


def coin(call):
    user_id = call.from_user.id

    balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]
    user_bet = cursor.execute('SELECT bet FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

    result = random.randint(0, 1)
    choice = int(call.data.split('coin_')[1])

    markup = types.InlineKeyboardMarkup()

    buttons = [
        types.InlineKeyboardButton(text='ü¶Ö –û—Ä–µ–ª', callback_data='coin_0'),
        types.InlineKeyboardButton(text='ü•á –†–µ—à–∫–∞', callback_data='coin_1'),
        types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É', callback_data='change_bet_coin')
    ]

    markup.add(*buttons)

    if balance < user_bet:
        bot.send_message(
            user_id,
            'üö´ <b>–û—à–∏–±–∫–∞</b>\n\n'
            '–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å, –∞ —Ç–∞–∫ –∂–µ\n'
            '–±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –Ω—É–ª—é!\n'
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ',
            parse_mode='HTML',
            reply_markup=markup
        )

    else:
        bot.send_message(
            call.message.chat.id,
            f'<b>–í—ã–ø–∞–ª–æ:</b> <code>{"ü•á –†–µ—à–∫–∞" if result else "ü¶Ö –û—Ä–µ–ª"}</code>.\n',
            parse_mode='HTML'
        )

        if choice is result:
            bot.answer_callback_query(call.id, '–ü–æ–±–µ–¥–∞!')

            cursor.execute(f'UPDATE users SET balance = (balance + bet * 2) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_won = (games_won + 1) WHERE user_id = "{user_id}"')

            db.commit()

            balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

            bot.send_message(
                call.message.chat.id,
                f'üü° <b>–ü–æ–±–µ–¥–∞!</b>\n\n'
                f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
                f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
                f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ?',
                parse_mode='HTML',
                reply_markup=markup
            )

        else:
            bot.answer_callback_query(call.id, '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!')

            cursor.execute(f'UPDATE users SET balance = (balance - bet) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_played = (games_played + 1) WHERE user_id = "{user_id}"')

            db.commit()

            cursor.execute(f'UPDATE users SET games_lost = (games_lost + 1) WHERE user_id = "{user_id}"')

            db.commit()


            balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

            bot.send_message(
                call.message.chat.id,
                f'üü° <b>–ü—Ä–æ–∏–≥—Ä—ã—à!</b>\n\n'
                f'–ë–∞–ª–∞–Ω—Å: <code>{balance}</code> –º–æ–Ω–µ—Ç.\n'
                f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <code>{user_bet}</code> –º–æ–Ω–µ—Ç.\n\n'
                f'–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ?',
                parse_mode='HTML',
                reply_markup=markup
            )


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    user_id = call.message.chat.id

    if call.data in best_users_callbacks:
        get_best_players(call)

    elif call.data in slots_callbacks:
        slots(call)

    elif call.data in colors:
        roulette(call)

    elif call.data in dice_callbacks:
        dice(call)

    elif call.data in coin_callbacks:
        coin(call)

    elif call.data.startswith('change_bet_'):
        game = call.data.split('change_bet_')[1]

        if game == 'slots':
            title = 'üé∞ <b>–°–ª–æ—Ç—ã</b>'

        elif game == 'roulette':
            title = 'üéØ <b>–†—É–ª–µ—Ç–∫–∞</b>'

        elif game == 'dice':
            title = 'üé≤ <b>–ö–æ—Å—Ç–∏</b>'

        elif game == 'coin':
            title = 'üü° <b>–ú–æ–Ω–µ—Ç–∫–∞</b>'

        default_bet = 0

        cursor.execute(f'UPDATE users SET bet = "{default_bet}" WHERE user_id = "{user_id}"')

        db.commit()

        balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

        msg2 = bot.send_message(
            user_id,
            text=f'{title} \n\n'
                 f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏.\n'
                 f'–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∏–≥—Ä—ã: <code>{balance}</code> –º–æ–Ω–µ—Ç',
            parse_mode='HTML'
        )

        bot.register_next_step_handler(msg2, change_bet, game)


def change_bet(message, game):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=f'change_bet_{game}')
    markup.add(button)

    try:
        default_bet = 0

        user_id = message.from_user.id

        balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

        bet = message.text

        if int(balance) >= int(bet) > 0:
            cursor.execute(f'UPDATE users SET bet = "{bet}" WHERE user_id = "{user_id}"')

            db.commit()

            balance = cursor.execute('SELECT balance FROM users WHERE user_id=?', (user_id,)).fetchone()[0]

            start_game(message, game)

        else:
            bot.send_message(
                message.chat.id,
                'üö´ <b>–û—à–∏–±–∫–∞</b>\n\n'
                '–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å, –∞ —Ç–∞–∫ –∂–µ\n'
                '–±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –Ω—É–ª—é!\n'
                '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ',
                parse_mode='HTML',
                reply_markup=markup
            )

            cursor.execute(f'UPDATE users SET bet = {default_bet} WHERE user_id = "{user_id}"')

            db.commit()
    except:
        default_bet = 0

        user_id = message.from_user.id

        bot.send_message(
            message.chat.id,
            'üö´ <b>–û—à–∏–±–∫–∞</b>\n\n'
            '–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º!\n'
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ',
            parse_mode='HTML',
            reply_markup=markup
        )

        cursor.execute(f'UPDATE users SET bet = "{default_bet}" WHERE user_id = "{user_id}"')

        db.commit()


create_db()
bot.infinity_polling()
